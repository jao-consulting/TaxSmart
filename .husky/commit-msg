#!/usr/bin/env sh
# This script is used by Husky, a Git hooks manager, to enforce commit message conventions.
. "$(dirname -- "$0")/_/husky.sh"

#!/bin/sh
# The script checks the first line of the commit message against a regular expression.
# The regular expression checks that the commit message starts with a valid type (feat, fix, chore, etc.), followed by a colon and a space, and then the commit message.
# If the commit message does not match this format, the script aborts the commit and outputs an error message.
if ! head -1 "$1" | grep -qE "^(feat|fix|chore|docs|test|style|refactor|perf|build|ci|revert)(\(.+?\))?: .{1,}$"; then
    echo "Aborting commit. Your commit message is invalid." >&2
    exit 1
fi
# The script also checks that the commit message is not longer than 88 characters.
# If the commit message is too long, the script aborts the commit and outputs an error message.
if ! head -1 "$1" | grep -qE "^.{1,88}$"; then
    echo "Aborting commit. Your commit message is too long." >&2
    exit 1
fi